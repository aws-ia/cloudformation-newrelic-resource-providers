{
  "typeName": "Cloudsoft::NewRelic::Dashboard",
  "description": "Manage New Relic Dashboard, including WidgetInputs",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "DashboardInput": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the dashboard."
        },
        "Description": {
          "type": "string",
          "description": "Description of the dashboard."
        },
        "Pages": {
          "type": "array",
          "description": "An array of dashboard pages to attach to this resource.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/PageInput"
          }
        },
        "Permissions": {
          "type": "string",
          "enum": [
            "PRIVATE",
            "PUBLIC_READ_ONLY",
            "PUBLIC_READ_WRITE"
          ]
        }
      },
      "required": [
        "Name",
        "Pages",
        "Permissions"
      ],
      "additionalProperties": false
    },
    "AccountIdInput": {
      "type": "integer",
      "description": "Source account to fetch data from."
    },
    "NrqlQueryInput": {
      "type": "object",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountIdInput"
        },
        "Query": {
          "$ref": "#/definitions/QueryInput"
        }
      },
      "required": [
        "AccountId",
        "Query"
      ],
      "additionalProperties": false
    },
    "QueryInput": {
      "type": "string",
      "description": "The NRQL query that provides the data for the WidgetInput."
    },
    "DurationInput": {
      "type": "number",
      "description": "Duration of the requested time window, in milliseconds. When provided with endTime, the time window is set to the last x milliseconds ending at the specified time. If endTime is null, the time window is set to the last x milliseconds ending now."
    },
    "EndTimeInput": {
      "type": "number",
      "description": "Optional. End of the time window, in milliseconds."
    },
    "EntityInputIds": {
      "type": "array",
      "description": "Array of source agent Ids to fetch data from.",
      "insertionOrder": true,
      "items": {
        "type": "integer"
      }
    },
    "ThresholdInput": {
      "type": "object",
      "description": "Threshold to categorize the results of the query in different groups.",
      "properties": {
        "AlertSeverity": {
          "type": "string",
          "enum": [
            "NOT_ALERTING",
            "WARNING",
            "CRITICAL"
          ]
        },
        "Value": {
          "type": "string"
        }
      },
      "required": [
        "AlertSeverity",
        "Value"
      ],
      "additionalProperties": false
    },
    "EntityInput": {
      "type": "object"
    },
    "MetricInput": {
      "type": "object"
    },
    "PageInput": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the dashboard page."
        },
        "Description": {
          "type": "string",
          "description": "Description of the dashboard page."
        },
        "PageId": {
          "type": "string",
          "description": "Unique entity identifier of the page to be updated. When null, it means a new PageInput will be created."
        },
        "Widgets": {
          "type": "array",
          "description": "An array of widget objects to attach to this resource.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/WidgetInput"
          }
        }
      },
      "required": [
        "Name",
        "Widgets"
      ],
      "additionalProperties": false
    },
    "LayoutInput": {
      "type": "object",
      "description": "The widget's position and size in the dashboard. The maximum amount of columns is 12.",
      "properties": {
        "Row": {
          "type": "integer",
          "minimum": 1
        },
        "Column": {
          "type": "integer",
          "minimum": 1,
          "maximum": 12
        },
        "Width": {
          "type": "integer"
        },
        "Height": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "WidgetInput": {
      "description": "A widget object definition.",
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "Id of the widget. If null, a new widget will be created and added to a dashboard.",
          "minLength": 1
        },
        "Visualization": {
          "type": "string",
          "description": "The widget visualization type, as a string. For example: viz.line, viz.area. See the examples below.",
          "enum": [
            "viz.area",
            "viz.bar",
            "viz.billboard",
            "viz.line",
            "viz.markdown",
            "viz.pie",
            "viz.table",
            "viz.bullet",
            "viz.eventfeed",
            "viz.funnel",
            "viz.heatmap",
            "viz.histogram",
            "viz.inventory",
            "viz.json",
            "viz.servicemap"
          ]
        },
        "Layout": {
          "$ref": "#/definitions/LayoutInput"
        },
        "Title": {
          "type": "string",
          "description": "The title of the widget."
        },
        "Configuration": {
          "$ref": "#/definitions/WidgetInputConfigurationInput"
        },
        "RawConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
            },
            {
              "$ref": "#/definitions/AreaMetricInputWidgetInputConfigurationInputInput"
            },
            {
              "$ref": "#/definitions/BulletWidgetInputConfigurationInputInput"
            },
            {
              "$ref": "#/definitions/LineMetricInputWidgetInputConfigurationInputInput"
            },
            {
              "$ref": "#/definitions/ServiceMapWidgetInputConfigurationInputInput"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "WidgetInputConfigurationInput": {
      "type": "object",
      "properties": {
        "Area": {
          "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
        },
        "Bar": {
          "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
        },
        "Billboard": {
          "$ref": "#/definitions/BillboardWidgetInputConfigurationInputInput"
        },
        "Line": {
          "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
        },
        "Markdown": {
          "$ref": "#/definitions/MarkdownWidgetInputConfigurationInputInput"
        },
        "Pie": {
          "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
        },
        "Table": {
          "$ref": "#/definitions/TypeWidgetInputConfigurationInputInput"
        }
      },
      "additionalProperties": false
    },
    "TypeWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for standard typed widget. This includes: Area, Bar, Line, Pie, Table, Event Feed, Funnel, Heatmap, Histogram, JSON",
      "properties": {
        "NrqlQueries": {
          "type": "array",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/NrqlQueryInput"
          }
        }
      },
      "additionalProperties": false
    },
    "BillboardWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Billboard.",
      "properties": {
        "NrqlQueries": {
          "type": "array",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/NrqlQueryInput"
          }
        },
        "Thresholds": {
          "type": "array",
          "description": "Optional. Array of thresholds to categorize the results of the query in different groups.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/ThresholdInput"
          }
        }
      },
      "additionalProperties": false
    },
    "MarkdownWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Markdown.",
      "properties": {
        "Text": {
          "type": "string",
          "description": "Content to be added in the markdown WidgetInput."
        }
      },
      "required": [
        "Text"
      ],
      "additionalProperties": false
    },
    "AreaMetricInputWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Area (Metric)",
      "properties": {
        "Duration": {
          "$ref": "#/definitions/DurationInput"
        },
        "EndTime": {
          "$ref": "#/definitions/EndTimeInput"
        },
        "EntityIds": {
          "$ref": "#/definitions/EntityInputIds"
        },
        "Metrics": {
          "type": "array",
          "description": "For type SCOPE_BREAKDOWN only. List of metrics to be fetched.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/MetricInput"
          }
        },
        "Type": {
          "type": "string",
          "description": "Type of the predefined chart.",
          "enum": [
            "APPLICATION_BREAKDOWN",
            "BACKGROUND_BREAKDOWN",
            "BROWSER_BREAKDOWN",
            "GC_RUNS_BREAKDOWN",
            "SCOPE_BREAKDOWN",
            "SOLR_BREAKDOWN"
          ]
        }
      },
      "required": [
        "Duration",
        "EntityIds",
        "Type"
      ],
      "additionalProperties": false
    },
    "BulletWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Line (Metric).",
      "properties": {
        "NrqlQueries": {
          "type": "array",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/NrqlQueryInput"
          }
        },
        "Limit": {
          "type": "number",
          "description": "Goal against which all query results are compared to."
        }
      },
      "additionalProperties": false
    },
    "InventoryWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Inventory.",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountIdInput"
        },
        "Filters": {
          "type": "object",
          "description": "Map of the filters to be applied to the infrastructure sources."
        },
        "Sources": {
          "type": "array",
          "description": "List of the infrastructure sources to get data from.",
          "insertionOrder": true,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "LineMetricInputWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Area (Metric)",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountIdInput"
        },
        "CompareWith": {
          "type": "object",
          "description": "Optional. Additional time window to query. For example: {\noffsetDurationInput: 86400000\npresentation: {\"#c001\", \"Yesterday\"}\n}"
        },
        "Duration": {
          "$ref": "#/definitions/DurationInput"
        },
        "EndTime": {
          "$ref": "#/definitions/EndTimeInput"
        },
        "EntityIds": {
          "$ref": "#/definitions/EntityInputIds"
        },
        "Facets": {
          "type": "string",
          "description": "Optional. Facet the data by the given attribute. It can be host, agent, application, or mobile_version.",
          "enum": [
            "host", "agent", "application", "mobile_version"
          ]
        },
        "Limit": {
          "type": "integer",
          "description": "Optional. Maximum amount of series to be returned."
        },
        "Metrics": {
          "type": "array",
          "description": "List of metrics to be fetched.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/MetricInput"
          }
        },
        "OrderBy": {
          "type": "string",
          "description": "Optional. Used to sort the results in descending order."
        }
      },
      "required": [
        "AccountId",
        "Duration",
        "EndTime",
        "EntityIds",
        "Metrics"
      ],
      "additionalProperties": false
    },
    "ServiceMapWidgetInputConfigurationInputInput": {
      "type": "object",
      "description": "Configuration object for the widget Service Map.",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/AccountIdInput"
        },
        "AdditionalEntities": {
          "type": "array",
          "description": "Optional. An array of additional entities to include. The target is the entity downstream, while the source is upstream. Type, vendor, target, and source are optional.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/EntityInput"
          }
        },
        "DeemphasizedConditions": {
          "type": "array",
          "description": "Optional. Entities with these conditions have a faded appearance in the map.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/EntityInput"
          }
        },
        "HiddenEntities": {
          "type": "array",
          "description": "Optional. Entities to be excluded from the map.",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/EntityInput"
          }
        },
        "PrimaryEntities": {
          "type": "array",
          "description": "The primary entities which start the map (most upstream).",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/EntityInput"
          }
        }
      },
      "required": [
        "AccountId",
        "PrimaryEntities"
      ],
      "additionalProperties": false
    },
    "DashboardEntityResult": {
      "type": "object",
      "description": "Dashboard creation result",
      "properties": {
        "accountId": {
          "type": "integer",
          "description": "Account ID."
        },
        "createdAt": {
          "type": "integer",
          "description": "Dashboard creation timestamp."
        },
        "guid": {
          "type": "string",
          "description": "Unique entity identifier."
        },
        "name": {
          "type": "string",
          "description": "Dashboard name."
        },
        "owner": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "description": "Dashboard update timestamp."
        }
      },
      "additionalProperties": false
    },
    "DashboardCreateError": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Error description"
        },
        "type": {
          "type": "string",
          "description": "Error type"
        }
      },
      "additionalProperties": false
    },
    "DashboardCreateResult": {
      "type": "object",
      "properties": {
        "entityResult": {
          "$ref": "#/definitions/DashboardEntityResult"
        },
        "errors": {
          "type": "array",
          "description": "Expected errors while processing request",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/DashboardCreateError"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "AccountId": {
      "type": "integer",
      "description": "Account ID the dashboard should belong to."
    },
    "DashboardId": {
      "type": "string",
      "description": "Dashboard ID."
    },
    "Dashboard": {
      "$ref": "#/definitions/DashboardInput"
    },
    "DashboardCreateResult": {
      "$ref": "#/definitions/DashboardCreateResult"
    }
  },
  "additionalProperties": false,
  "required": [
    "AccountId",
    "Dashboard"
  ],
  "createOnlyProperties": [
    "/properties/AccountId"
  ],
  "readOnlyProperties": [
    "/properties/DashboardId",
    "/properties/DashboardCreateResult"
  ],
  "primaryIdentifier": [
    "/properties/AccountId",
    "/properties/DashboardId"
  ],
  "handlers": {
    "create": {
      "permissions": []
    },
    "read": {
      "permissions": []
    },
    "update": {
      "permissions": []
    },
    "delete": {
      "permissions": []
    },
    "list": {
      "permissions": []
    }
  }
}
